package com.eds.ma.mongodb.collection;import com.eds.ma.mongodb.BaseDocument;import com.eds.ma.socket.SocketConstants;import com.eds.ma.socket.message.MessageTypeConstants;import com.eds.ma.socket.util.SocketMessageUtils;import lombok.Data;import org.springframework.data.mongodb.core.mapping.Document;import java.util.Date;/** * 设备注册信息 * @Author gaoyan * @Date: 2018/6/17 */@Data@Document(collection="DeviceRegister")public class MongoDeviceRegister extends BaseDocument {    /**     * 设备类型     */    private Long deviceKind;    /**     * 设备编号     */    private Long deviceCode;    /**     * 报文编号     */    private Long messageNo;    /**     * 设备ICCID     */    private Long deviceICCID;    /**     * 创建时间     */    private Date created;    /**     * 时间戳     */    private Long timestamp;    /**     * 是否删除     */    private Integer dataStatus = 1;    public byte[] toMessageByte(){        byte[] deviceKindBytes  =  SocketMessageUtils.L2Bytes(deviceKind,1);        byte[] deviceCodeBytes  =  SocketMessageUtils.L2Bytes(deviceCode,1);        byte[] messageNoBytes = SocketMessageUtils.L2Bytes(messageNo,1);        byte[] messageTypeBytes  =  SocketMessageUtils.L2Bytes(MessageTypeConstants.DEVICE_REGISTER,1);        byte[] deviceICCIDBytes  =  SocketMessageUtils.L2Bytes(deviceICCID,10);        Long headSum = deviceKind+deviceCode+messageNo;        byte[] checkByte = SocketMessageUtils.buildMessageCheckByte(headSum,MessageTypeConstants.DEVICE_REGISTER,deviceICCID);        return SocketMessageUtils.combineBytes(deviceKindBytes,deviceCodeBytes,messageNoBytes,messageTypeBytes,deviceICCIDBytes,checkByte);    }}